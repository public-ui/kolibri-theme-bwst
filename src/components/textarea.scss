@use '../rem' as *;
@use '../mixins/alert-wc' as *;

@layer kol-theme-component {
	:host {
		font-family: var(--font-family);
		@include kol-alert-theme;
	}

	.kol-input {
		gap: rem(calc(0.25 * 16));
	}

	.kol-input .error {
		order: 1;
	}

	.kol-input label {
		order: 2;
		font-size: rem(calc(0.9 * 16));
		font-weight: 700;
	}

	.kol-input .input {
		order: 3;
	}

	.kol-input .counter {
		order: 4;
	}

	.kol-input .hint {
		order: 5;
		font-size: rem(calc(0.9 * 16));
		font-style: italic;
	}

	textarea {
		border: none;
	}

	input::placeholder {
		color: var(--color-subtle);
	}

	.input {
		background-color: var(--color-light);
		border-color: var(--color-subtle);
		border-radius: var(--border-radius);
		border-style: solid;
		border-width: var(--border-width);
		padding: 0 rem(calc(0.5 * 16));
	}

	.input > .kol-icon {
		width: rem(calc(1 * 16));
	}

	.input:is(.icon-left, .icon-right) {
		padding-left: rem(calc(1 * 16));
		padding-right: rem(calc(1 * 16));
	}

	.input:is(.icon-left, .icon-right) input {
		padding-left: rem(calc(0.5 * 16));
		padding-right: rem(calc(0.5 * 16));
	}

	.input > input:first-child {
		padding-left: var(--spacing);
	}

	.input > input:last-child {
		padding-right: var(--spacing);
	}

	:not(.disabled) .input:hover {
		border-color: var(--color-primary);
	}

	textarea:disabled {
		cursor: not-allowed;
	}

	.required label > span::after {
		content: '*';
		padding-left: 0.125em;
	}

	.kol-input.error {
		border-left: rem(3) solid var(--color-danger);
		padding-left: rem(calc(1 * 16));
	}

	.kol-input.error .input:focus-within {
		outline-color: var(--color-danger) !important;
	}

	.kol-input.error .kol-alert-wc.error {
		@include kol-input-error-with-kol-alert-wc-error(--color-danger);
	}

	select[multiple],
	textarea {
		overflow: auto;
	}

	textarea {
		display: block;
	}

	.input {
		position: relative;
	}

	.kol-input.disabled .input {
		background-color: var(--color-mute);
		border-color: var(--color-mute-variant);
		color: var(--color-text);
	}
}
